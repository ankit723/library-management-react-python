import { useState } from "react";

export const CartIcon = ({
  fill = "currentcolor",
  height = 20,
  width = 20,
  ...props
}) => {
  const [hover, setHover] = useState(false);
  return (
    <div className="relative">
      <svg
        width={width}
        height={height}
        viewBox="0 0 33 33"
        fill={hover ? "#cfe3ff" : 'none'}
        xmlns="http://www.w3.org/2000/svg"
        onMouseEnter={() => setHover(true)}  // Sets hover state to true on mouse enter
        onMouseLeave={() => setHover(false)} // Sets hover state to false on mouse leave
        style={{
          cursor: "pointer",
          transition: "fill 0.3s ease",       // Smooth transition for fill color
        }}
        className={hover ? "text-blue-800" : ""}
        {...props}
      >
        <circle
          cx="16.4091"
          cy="16.591"
          r="15.9091"
          stroke={hover ? "#0F0726" : "white"}
          strokeOpacity="0.984314"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          stroke={hover ? "#0F0726" : "white"}
          d="M12.7548 11.3556V11.9416H11.2022C10.4521 11.9416 9.82384 12.5074 9.74492 13.2536L8.75803 22.6302C8.73656 22.8344 8.75826 23.0409 8.82172 23.2361C8.88518 23.4314 8.98898 23.6112 9.12639 23.7638C9.26379 23.9164 9.43174 24.0384 9.61933 24.1218C9.80693 24.2053 10.01 24.2485 10.2153 24.2484H22.3268C22.5321 24.2485 22.7352 24.2053 22.9228 24.1218C23.1104 24.0384 23.2783 23.9164 23.4157 23.7638C23.5531 23.6112 23.6569 23.4314 23.7204 23.2361C23.7838 23.0409 23.8055 22.8344 23.7841 22.6302L22.7972 13.2536C22.7593 12.8935 22.5895 12.5601 22.3204 12.3179C22.0513 12.0756 21.702 11.9416 21.3399 11.9416H19.7873V11.3556C19.7873 10.423 19.4168 9.52866 18.7574 8.86924C18.098 8.20982 17.2036 7.83936 16.271 7.83936C15.3385 7.83936 14.4441 8.20982 13.7847 8.86924C13.1253 9.52866 12.7548 10.423 12.7548 11.3556ZM16.271 9.01143C15.6493 9.01143 15.0531 9.25841 14.6135 9.69802C14.1739 10.1376 13.9269 10.7339 13.9269 11.3556V11.9416H18.6152V11.3556C18.6152 10.7339 18.3682 10.1376 17.9286 9.69802C17.489 9.25841 16.8928 9.01143 16.271 9.01143ZM13.9269 15.4579C13.9269 16.0796 14.1739 16.6758 14.6135 17.1154C15.0531 17.555 15.6493 17.802 16.271 17.802C16.8928 17.802 17.489 17.555 17.9286 17.1154C18.3682 16.6758 18.6152 16.0796 18.6152 15.4579V14.8718C18.6152 14.7164 18.6769 14.5673 18.7868 14.4574C18.8968 14.3475 19.0458 14.2858 19.2012 14.2858C19.3567 14.2858 19.5057 14.3475 19.6156 14.4574C19.7255 14.5673 19.7873 14.7164 19.7873 14.8718V15.4579C19.7873 16.3904 19.4168 17.2848 18.7574 17.9442C18.098 18.6036 17.2036 18.9741 16.271 18.9741C15.3385 18.9741 14.4441 18.6036 13.7847 17.9442C13.1253 17.2848 12.7548 16.3904 12.7548 15.4579V14.8718C12.7548 14.7164 12.8166 14.5673 12.9265 14.4574C13.0364 14.3475 13.1854 14.2858 13.3409 14.2858C13.4963 14.2858 13.6453 14.3475 13.7552 14.4574C13.8651 14.5673 13.9269 14.7164 13.9269 14.8718V15.4579Z"
          fill={hover ? "#cfe3ff" : 'white'}
          fillOpacity="0.984314"
        />
      </svg>
    </div>
  );
};
